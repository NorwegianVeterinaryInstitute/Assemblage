/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Config file for defining module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
        withName: 'FASTQC' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "fastqc.version"
                ]
        }
	withName: 'MULTIQC_PRE' {
                publishDir = [
			[
                                path:           { "${params.out_dir}/qc/multiqc_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html",
				saveAs:		{"MultiQC_pre_trimming_report.html"}
			],
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "multiqc.version"
			]
                ]
        }
	withName: 'MULTIQC_POST' {
                publishDir = [
                                path:           { "${params.out_dir}/qc/multiqc_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html",
				saveAs:		{"MultiQC_post_trimming_report.html"}
                ]
        }
	withName: 'TRIM' {
                publishDir = [
			[
                                path:           { "${params.out_dir}/qc/trimming_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*trimming_report.txt"
			],
			[
		                path:           { "${params.out_dir}/qc/trimmed_reads" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*val_{1,2}.fq.gz",
				saveAs:		{ params.output_trimmed_reads ? it : null }
                        ],
                        [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "trim_galore.version"
                        ]
		]
        }
	withName: 'RASUSA' {
		publishDir = [
			[
	                        path:           { "${params.out_dir}/qc/subsampling" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*rasusa.log"
			],
			[
                                path:           { "${params.out_dir}/qc/subsampling" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*rasusa_*fq.gz",
				saveAs:		{ params.output_subsampled_reads ? it : null }
			],
                        [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "rasusa.version"
                        ]
		]
	}
	withName: 'BEDTOOLS' {
		publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "bedtools.version"
			],
			[
                                path:           { "${params.out_dir}/assembly/coverage_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*_genomecov.txt",
				saveAs:		{ params.output_coverage_reports ? it : null }
                        ]
		]
	}
	withName: 'BWA' {
		publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "bwa.version"
			],
			[
                                path:           { "${params.out_dir}/assembly/mapping" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.bam",
				saveAs:		{ params.output_bam ? it : null }
                        ]
		]
	}
	withName: 'KRAKEN' {
		publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "kraken2.version"
			],
			[
                                path:           { "${params.out_dir}/qc/kraken_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*kr2.report",
				saveAs:		{ params.output_kraken_reports ? it : null }
                        ]
		]
	}
        withName: 'QUAST' {
                publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "quast.version"
			],
			[
                                path:           { "${params.out_dir}/assembly" },
                                mode:           params.publish_dir_mode,
                                pattern:        "transposed_report.tsv",
				saveAs:		{"quast_report.tsv"}
			]
                ]
        }
	withName: 'QUAST_COMPARE' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "quast.version"
		]
	}
	withName: 'MERGE_REPORTS' {
		publishDir = [
                                path:           { "${params.out_dir}/assembly" },
                                mode:           params.publish_dir_mode,
                                pattern:        "quast_comparison_report.txt",
                                saveAs:         {"quast_comparison_report.txt"}
                ]
	}
	withName: 'UNICYCLER|UNICYCLER_HYBRID' {
		ext.args = {
			[ params.unicycler_args ? "${params.unicycler_args}" : '',
			"--verbosity 2",
			"--keep 2",
			"--mode ${params.unicycler_mode}",
			"--min_fasta_length ${params.min_contig_len}",
			"--depth_filter ${params.depth_filter}"
			].join(' ').trim()
		}
		publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "unicycler.version"
			],
			[
				path:		{ "${params.out_dir}/assembly/unicycler" },
				mode:		params.publish_dir_mode,
				pattern:	"*.fasta"
			]
		]
	}

	withName: 'POLYPOLISH' {
		publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "polypolish.version"
			],
			[
				path:           { "${params.out_dir}/assembly/polishing" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*_polished.fasta"
			]
		]
	}
	withName: 'MOB_RECON' {
                publishDir = [
                        [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "mobsuite.version"
                        ],
			[
                                path:           { "${params.out_dir}/ellipsis/mge_reports" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*mge_report.txt",
				saveAs:		{ params.output_mge_reports ? it : null }
			],
			[
                                path:           { "${params.out_dir}/ellipsis/plasmids" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.plasmid*.fasta"
			],
			[
                                path:           { "${params.out_dir}/ellipsis/chromosomes" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.chromosome.fasta"
			]
		]
        }
        withName: 'REPORT_DRAFT|REPORT_HYBRID' {
                publishDir = [
                                path:           { "${params.out_dir}" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html"
                ]
        }
	withName: 'RESFINDER' {
		publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "resfinder.version"
		]
	}
        withName: 'VIRULENCEFINDER' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "virulencefinder.version"
                ]
        }
        withName: 'PLASMIDFINDER' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "plasmidfinder.version"
                ]
        }
        withName: 'BAKTA' {
                publishDir = [
			[
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "bakta.version"
			],
			[
                                path:           { "${params.out_dir}/ellipsis/annotation" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*gff3"
			]
                ]
        }
        withName: 'FILTLONG' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "filtlong.version"
                ]
        }
        withName: 'MINIMAP2' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "minimap2.version"
                ]
        }
        withName: 'SAMTOOLS' {
                publishDir = [
                                path:           { "${params.out_dir}/software_versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "samtools.version"
                ]
        }
        withName: 'REPORT_ELLIPSIS' {
                publishDir = [
                                path:           { "${params.out_dir}/ellipsis" },
                                mode:           params.publish_dir_mode,
                                pattern:        "ellipsis_report.tsv"
                ]
        }
}

